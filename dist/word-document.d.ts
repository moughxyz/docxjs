import { DocumentParser } from './document-parser';
import { Relationship } from './common/relationship';
import { Part } from './common/part';
import { FontTablePart } from './font-table/font-table';
import { DocumentPart } from './document/document-part';
import { NumberingPart } from './numbering/numbering-part';
import { StylesPart } from './styles/styles-part';
import { ExtendedPropsPart } from "./document-props/extended-props-part";
import { CorePropsPart } from "./document-props/core-props-part";
import { ThemePart } from "./theme/theme-part";
import { EndnotesPart, FootnotesPart } from "./notes/parts";
import { SettingsPart } from "./settings/settings-part";
import { CommentsPart } from "./comments/comments-part";
import { CommentsExtendedPart } from "./comments/comments-extended-part";
export declare class WordDocument {
    private _package;
    private _parser;
    private _options;
    rels: Relationship[];
    parts: Part[];
    partsMap: Record<string, Part>;
    documentPart: DocumentPart;
    fontTablePart: FontTablePart;
    numberingPart: NumberingPart;
    stylesPart: StylesPart;
    footnotesPart: FootnotesPart;
    endnotesPart: EndnotesPart;
    themePart: ThemePart;
    corePropsPart: CorePropsPart;
    extendedPropsPart: ExtendedPropsPart;
    settingsPart: SettingsPart;
    commentsPart: CommentsPart;
    commentsExtendedPart: CommentsExtendedPart;
    static load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument>;
    save(type?: string): Promise<any>;
    private loadRelationshipPart;
    loadDocumentImage(id: string, part?: Part): Promise<string>;
    loadNumberingImage(id: string): Promise<string>;
    loadFont(id: string, key: string): Promise<string>;
    private blobToURL;
    findPartByRelId(id: string, basePart?: Part): Part;
    getPathById(part: Part, id: string): string;
    private loadResource;
}
export declare function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array;
